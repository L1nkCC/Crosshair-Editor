//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Player/Inputs/InputSystem/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Input
{
    public partial class @PlayerControls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""5cfa55ef-39ca-4002-8dbe-3324b720fb29"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""72e6cccc-1f5f-4b9d-9886-810407210b63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ADS"",
                    ""type"": ""Button"",
                    ""id"": ""1b74ea0b-cd8d-45d6-a976-f1a4d2ad5468"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HorizontalMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ca071023-e404-40d5-89e3-2dfd5f10a496"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a9604045-2fbe-4b9c-83ff-566888b60116"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseX"",
                    ""type"": ""PassThrough"",
                    ""id"": ""586fd38b-766f-4ed5-857d-0723b155339e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a35ad07e-7798-49fc-98e3-0718aa90afcb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""aac7756b-7cd3-424e-9510-fefd7e30a9b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""5a23d288-1075-41bd-9dbb-03a66ede6a4f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""2bb608d3-bb93-4a78-a553-cd3d66403e9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""e80ddfb1-700d-46a8-b016-a581dac71a44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability"",
                    ""type"": ""Button"",
                    ""id"": ""c818d1e1-2702-418c-a7e9-4750fd3563a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""0a6a1b19-a18d-4314-bd73-91b86b32119f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Melee"",
                    ""type"": ""Button"",
                    ""id"": ""31b51a80-13bf-4fce-b150-c7c9d19c3a97"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollWeapon"",
                    ""type"": ""Value"",
                    ""id"": ""a256cbeb-662d-470d-88d0-6955aa351cb9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchWeapon1"",
                    ""type"": ""Button"",
                    ""id"": ""10fe8696-4866-4947-a2ae-a6540a93f998"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchWeapon2"",
                    ""type"": ""Button"",
                    ""id"": ""4651502f-6aac-4edc-ac75-3b29a8549ea8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchWeapon3"",
                    ""type"": ""Button"",
                    ""id"": ""f1594903-8cae-4795-9981-10c8e95e5e8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchWeapon4"",
                    ""type"": ""Button"",
                    ""id"": ""31d8f68a-0f4e-49ea-8e9f-68b696eba1f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""47612731-d4c6-4430-b5ae-0e7fb5177fa9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""b144b262-965f-4d2d-8bc9-34483ed6995c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e6bfba6a-8c0c-4cdb-bfc6-3bd5b809fbf2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e7198b38-a0c2-4534-bd42-e639c53ff173"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9745cad6-8ea5-4c65-b04c-67c41fb58e11"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6d4f85d7-2c00-4b5f-89c4-1c97a2538d5b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b90e13fe-b201-44ef-9571-6098723f4df5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4775cfda-f17b-4dc6-ba3f-006118a70249"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f5b7b8e-8503-438c-9ef9-dc5bb64e20df"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a34dd90-09c1-41ee-ad28-14849d265acc"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1dae735b-1892-4319-95c8-0dfe0a7c7366"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6fb0f6c-274b-4aaf-bd4e-4934ec8b9020"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddf252ec-5df2-46ae-9eaa-48da30a613a6"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9edd034f-082b-4924-9135-88da966e81bc"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b6bf8dc-a55b-4287-9038-3fca32276828"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6a55574-f7d3-458e-aa24-145dc5c2b283"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66dd683c-803f-4a8d-9c82-9d0cc523cae7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ADS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf3a10c9-35fd-48c2-9500-cc478dca43f3"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""626d6586-b2a8-4d84-8bce-16d0e94a2e29"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d12452bb-a1bc-4ba7-a672-1d5f3b5a89b7"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a642bef7-3cf7-4c0c-9d22-7f64353317ee"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2f6f3b6-74d9-4aa5-81a4-d5b0dfcd94ee"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Gameplay
            m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
            m_Gameplay_Fire = m_Gameplay.FindAction("Fire", throwIfNotFound: true);
            m_Gameplay_ADS = m_Gameplay.FindAction("ADS", throwIfNotFound: true);
            m_Gameplay_HorizontalMovement = m_Gameplay.FindAction("HorizontalMovement", throwIfNotFound: true);
            m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
            m_Gameplay_MouseX = m_Gameplay.FindAction("MouseX", throwIfNotFound: true);
            m_Gameplay_MouseY = m_Gameplay.FindAction("MouseY", throwIfNotFound: true);
            m_Gameplay_Use = m_Gameplay.FindAction("Use", throwIfNotFound: true);
            m_Gameplay_Drop = m_Gameplay.FindAction("Drop", throwIfNotFound: true);
            m_Gameplay_Sprint = m_Gameplay.FindAction("Sprint", throwIfNotFound: true);
            m_Gameplay_Crouch = m_Gameplay.FindAction("Crouch", throwIfNotFound: true);
            m_Gameplay_Ability = m_Gameplay.FindAction("Ability", throwIfNotFound: true);
            m_Gameplay_Reload = m_Gameplay.FindAction("Reload", throwIfNotFound: true);
            m_Gameplay_Melee = m_Gameplay.FindAction("Melee", throwIfNotFound: true);
            m_Gameplay_ScrollWeapon = m_Gameplay.FindAction("ScrollWeapon", throwIfNotFound: true);
            m_Gameplay_SwitchWeapon1 = m_Gameplay.FindAction("SwitchWeapon1", throwIfNotFound: true);
            m_Gameplay_SwitchWeapon2 = m_Gameplay.FindAction("SwitchWeapon2", throwIfNotFound: true);
            m_Gameplay_SwitchWeapon3 = m_Gameplay.FindAction("SwitchWeapon3", throwIfNotFound: true);
            m_Gameplay_SwitchWeapon4 = m_Gameplay.FindAction("SwitchWeapon4", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Gameplay
        private readonly InputActionMap m_Gameplay;
        private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
        private readonly InputAction m_Gameplay_Fire;
        private readonly InputAction m_Gameplay_ADS;
        private readonly InputAction m_Gameplay_HorizontalMovement;
        private readonly InputAction m_Gameplay_Jump;
        private readonly InputAction m_Gameplay_MouseX;
        private readonly InputAction m_Gameplay_MouseY;
        private readonly InputAction m_Gameplay_Use;
        private readonly InputAction m_Gameplay_Drop;
        private readonly InputAction m_Gameplay_Sprint;
        private readonly InputAction m_Gameplay_Crouch;
        private readonly InputAction m_Gameplay_Ability;
        private readonly InputAction m_Gameplay_Reload;
        private readonly InputAction m_Gameplay_Melee;
        private readonly InputAction m_Gameplay_ScrollWeapon;
        private readonly InputAction m_Gameplay_SwitchWeapon1;
        private readonly InputAction m_Gameplay_SwitchWeapon2;
        private readonly InputAction m_Gameplay_SwitchWeapon3;
        private readonly InputAction m_Gameplay_SwitchWeapon4;
        public struct GameplayActions
        {
            private @PlayerControls m_Wrapper;
            public GameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Fire => m_Wrapper.m_Gameplay_Fire;
            public InputAction @ADS => m_Wrapper.m_Gameplay_ADS;
            public InputAction @HorizontalMovement => m_Wrapper.m_Gameplay_HorizontalMovement;
            public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
            public InputAction @MouseX => m_Wrapper.m_Gameplay_MouseX;
            public InputAction @MouseY => m_Wrapper.m_Gameplay_MouseY;
            public InputAction @Use => m_Wrapper.m_Gameplay_Use;
            public InputAction @Drop => m_Wrapper.m_Gameplay_Drop;
            public InputAction @Sprint => m_Wrapper.m_Gameplay_Sprint;
            public InputAction @Crouch => m_Wrapper.m_Gameplay_Crouch;
            public InputAction @Ability => m_Wrapper.m_Gameplay_Ability;
            public InputAction @Reload => m_Wrapper.m_Gameplay_Reload;
            public InputAction @Melee => m_Wrapper.m_Gameplay_Melee;
            public InputAction @ScrollWeapon => m_Wrapper.m_Gameplay_ScrollWeapon;
            public InputAction @SwitchWeapon1 => m_Wrapper.m_Gameplay_SwitchWeapon1;
            public InputAction @SwitchWeapon2 => m_Wrapper.m_Gameplay_SwitchWeapon2;
            public InputAction @SwitchWeapon3 => m_Wrapper.m_Gameplay_SwitchWeapon3;
            public InputAction @SwitchWeapon4 => m_Wrapper.m_Gameplay_SwitchWeapon4;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
            public void AddCallbacks(IGameplayActions instance)
            {
                if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @ADS.started += instance.OnADS;
                @ADS.performed += instance.OnADS;
                @ADS.canceled += instance.OnADS;
                @HorizontalMovement.started += instance.OnHorizontalMovement;
                @HorizontalMovement.performed += instance.OnHorizontalMovement;
                @HorizontalMovement.canceled += instance.OnHorizontalMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MouseX.started += instance.OnMouseX;
                @MouseX.performed += instance.OnMouseX;
                @MouseX.canceled += instance.OnMouseX;
                @MouseY.started += instance.OnMouseY;
                @MouseY.performed += instance.OnMouseY;
                @MouseY.canceled += instance.OnMouseY;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
                @Drop.started += instance.OnDrop;
                @Drop.performed += instance.OnDrop;
                @Drop.canceled += instance.OnDrop;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Ability.started += instance.OnAbility;
                @Ability.performed += instance.OnAbility;
                @Ability.canceled += instance.OnAbility;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Melee.started += instance.OnMelee;
                @Melee.performed += instance.OnMelee;
                @Melee.canceled += instance.OnMelee;
                @ScrollWeapon.started += instance.OnScrollWeapon;
                @ScrollWeapon.performed += instance.OnScrollWeapon;
                @ScrollWeapon.canceled += instance.OnScrollWeapon;
                @SwitchWeapon1.started += instance.OnSwitchWeapon1;
                @SwitchWeapon1.performed += instance.OnSwitchWeapon1;
                @SwitchWeapon1.canceled += instance.OnSwitchWeapon1;
                @SwitchWeapon2.started += instance.OnSwitchWeapon2;
                @SwitchWeapon2.performed += instance.OnSwitchWeapon2;
                @SwitchWeapon2.canceled += instance.OnSwitchWeapon2;
                @SwitchWeapon3.started += instance.OnSwitchWeapon3;
                @SwitchWeapon3.performed += instance.OnSwitchWeapon3;
                @SwitchWeapon3.canceled += instance.OnSwitchWeapon3;
                @SwitchWeapon4.started += instance.OnSwitchWeapon4;
                @SwitchWeapon4.performed += instance.OnSwitchWeapon4;
                @SwitchWeapon4.canceled += instance.OnSwitchWeapon4;
            }

            private void UnregisterCallbacks(IGameplayActions instance)
            {
                @Fire.started -= instance.OnFire;
                @Fire.performed -= instance.OnFire;
                @Fire.canceled -= instance.OnFire;
                @ADS.started -= instance.OnADS;
                @ADS.performed -= instance.OnADS;
                @ADS.canceled -= instance.OnADS;
                @HorizontalMovement.started -= instance.OnHorizontalMovement;
                @HorizontalMovement.performed -= instance.OnHorizontalMovement;
                @HorizontalMovement.canceled -= instance.OnHorizontalMovement;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @MouseX.started -= instance.OnMouseX;
                @MouseX.performed -= instance.OnMouseX;
                @MouseX.canceled -= instance.OnMouseX;
                @MouseY.started -= instance.OnMouseY;
                @MouseY.performed -= instance.OnMouseY;
                @MouseY.canceled -= instance.OnMouseY;
                @Use.started -= instance.OnUse;
                @Use.performed -= instance.OnUse;
                @Use.canceled -= instance.OnUse;
                @Drop.started -= instance.OnDrop;
                @Drop.performed -= instance.OnDrop;
                @Drop.canceled -= instance.OnDrop;
                @Sprint.started -= instance.OnSprint;
                @Sprint.performed -= instance.OnSprint;
                @Sprint.canceled -= instance.OnSprint;
                @Crouch.started -= instance.OnCrouch;
                @Crouch.performed -= instance.OnCrouch;
                @Crouch.canceled -= instance.OnCrouch;
                @Ability.started -= instance.OnAbility;
                @Ability.performed -= instance.OnAbility;
                @Ability.canceled -= instance.OnAbility;
                @Reload.started -= instance.OnReload;
                @Reload.performed -= instance.OnReload;
                @Reload.canceled -= instance.OnReload;
                @Melee.started -= instance.OnMelee;
                @Melee.performed -= instance.OnMelee;
                @Melee.canceled -= instance.OnMelee;
                @ScrollWeapon.started -= instance.OnScrollWeapon;
                @ScrollWeapon.performed -= instance.OnScrollWeapon;
                @ScrollWeapon.canceled -= instance.OnScrollWeapon;
                @SwitchWeapon1.started -= instance.OnSwitchWeapon1;
                @SwitchWeapon1.performed -= instance.OnSwitchWeapon1;
                @SwitchWeapon1.canceled -= instance.OnSwitchWeapon1;
                @SwitchWeapon2.started -= instance.OnSwitchWeapon2;
                @SwitchWeapon2.performed -= instance.OnSwitchWeapon2;
                @SwitchWeapon2.canceled -= instance.OnSwitchWeapon2;
                @SwitchWeapon3.started -= instance.OnSwitchWeapon3;
                @SwitchWeapon3.performed -= instance.OnSwitchWeapon3;
                @SwitchWeapon3.canceled -= instance.OnSwitchWeapon3;
                @SwitchWeapon4.started -= instance.OnSwitchWeapon4;
                @SwitchWeapon4.performed -= instance.OnSwitchWeapon4;
                @SwitchWeapon4.canceled -= instance.OnSwitchWeapon4;
            }

            public void RemoveCallbacks(IGameplayActions instance)
            {
                if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGameplayActions instance)
            {
                foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GameplayActions @Gameplay => new GameplayActions(this);
        private int m_KeyboardSchemeIndex = -1;
        public InputControlScheme KeyboardScheme
        {
            get
            {
                if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
                return asset.controlSchemes[m_KeyboardSchemeIndex];
            }
        }
        public interface IGameplayActions
        {
            void OnFire(InputAction.CallbackContext context);
            void OnADS(InputAction.CallbackContext context);
            void OnHorizontalMovement(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnMouseX(InputAction.CallbackContext context);
            void OnMouseY(InputAction.CallbackContext context);
            void OnUse(InputAction.CallbackContext context);
            void OnDrop(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
            void OnCrouch(InputAction.CallbackContext context);
            void OnAbility(InputAction.CallbackContext context);
            void OnReload(InputAction.CallbackContext context);
            void OnMelee(InputAction.CallbackContext context);
            void OnScrollWeapon(InputAction.CallbackContext context);
            void OnSwitchWeapon1(InputAction.CallbackContext context);
            void OnSwitchWeapon2(InputAction.CallbackContext context);
            void OnSwitchWeapon3(InputAction.CallbackContext context);
            void OnSwitchWeapon4(InputAction.CallbackContext context);
        }
    }
}
